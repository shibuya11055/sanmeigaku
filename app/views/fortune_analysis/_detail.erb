<div class="ultra-compact-detail">
  <div class="compact-section">
    <div class="compact-header energy-bg"><i class="fas fa-star"></i> 三期エネルギー</div>
    <div class="compact-content">
      <span class="energy-item"><b>若年期</b>: <%= youth_sub_star.name %>・<%= @youth_sub_star.energy %></span>
      <span class="energy-item"><b>中年期</b>: <%= middle_age_sub_star.name %>・<%= @middle_age_sub_star.energy %></span>
      <span class="energy-item"><b>晩年期</b>: <%= old_age_sub_star.name %>・<%= @old_age_sub_star.energy %></span>
    </div>
  </div>

  <% if abnormals.present? %>
    <div class="compact-section">
      <div class="compact-header abnormal-bg"><i class="fas fa-exclamation-triangle"></i> 異常干支</div>
      <div class="compact-content">
        <% abnormals.each do |abnormal| %><span class="tag-item"><%= abnormal %></span><% end %>
      </div>
    </div>
  <% end %>

  <% birth_void_values = birth_voids.values.compact %>
  <% if birth_void_values.present? %>
    <div class="compact-section">
      <div class="compact-header void-bg"><i class="fas fa-ban"></i> 宿命天中殺</div>
      <div class="compact-content">
        <% birth_void_values.each do |value| %>
          <span class="<%= css_classes({
            'tag-item': true,
            'text-center': has_birth_voids[:has_compatible_void] || has_birth_voids[:has_double_birth_void] || has_birth_voids[:has_complete_void],
            'color-red': value == '生日中殺' || value == '生月中殺' || value == '生年中殺' || value == '日座天中殺' || value == '日居天中殺',
            'green-circle': value == '互換中殺',
            'blue-square': value == '宿命二中殺',
            'complete-void-color': value == '全天中殺'
          }) %>"><%= value %></span>
        <% end %>
      </div>
    </div>
  <% end %>

  <div class="compact-section">
    <div class="compact-header beast-bg"><i class="fas fa-dragon"></i> 宿命五型</div>
    <div class="compact-content center"><%= beast_type %></div>
  </div>

  <% if !stem_unions.values.all? { |union| union[:result].nil? } %>
    <div class="compact-section">
      <div class="compact-header unions-bg"><i class="fas fa-link"></i> 干合</div>
      <div class="compact-content">
        <% stem_unions.each do |key, union| %>
          <% if union[:result].present? %>
            <div class="info-row"><b>【<%= union[:title] %>】:</b> <%= union[:before].join('・') %> → <%= union[:result].join('・') %></div>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>

  <% phase_method_text = PhaseMethodText.new %>

  <% if phase_method[:has_combined] %>
    <div class="compact-section">
      <div class="compact-header combined-bg"><i class="fas fa-plus-circle"></i> 位相（合法）</div>
      <div class="compact-content">
        <% if phase_method[:trine].present? %>
          <div class="info-row"><%= phase_method_text.get_message("trine.#{phase_method[:trine]}") %></div>
        <% end %>
        <% if phase_method[:half_trine].present? %>
          <div class="info-row"><%= phase_method_text.get_message("half_trine.#{phase_method[:half_trine][:key]}") %> - <%= phase_method_text.get_message("branch_pairs.#{phase_method[:half_trine][:pairs].join('_and_')}") %></div>
        <% end %>
        <% if phase_method[:combination].present? %>
          <div class="info-row"><%= phase_method_text.get_message("combination.#{phase_method[:combination][:key]}") %> - <%= phase_method_text.get_message("branch_pairs.#{phase_method[:combination][:pairs].join('_and_')}") %></div>
        <% end %>
        <% if phase_method[:directional].present? %>
          <div class="info-row"><%= phase_method_text.get_message("directional.#{phase_method[:directional]}") %></div>
        <% end %>
        <% if phase_method[:half_directional].present? %>
          <div class="info-row"><%= phase_method_text.get_message("half_directional.#{phase_method[:half_directional][:key]}") %> - <%= phase_method_text.get_message("branch_pairs.#{phase_method[:half_directional][:pairs].join('_and_')}") %></div>
        <% end %>
      </div>
    </div>
  <% end %>

  <% if phase_method[:has_scattered] %>
    <div class="compact-section">
      <div class="compact-header scattered-bg"><i class="fas fa-share-alt"></i> 位相（散法）</div>
      <div class="compact-content">
        <% if phase_method[:clash].present? %>
          <div class="info-row"><%= phase_method_text.get_message("clash.#{phase_method[:clash][:key]}") %> - <%= phase_method_text.get_message("branch_pairs.#{phase_method[:clash][:pairs].join('_and_')}") %></div>
        <% end %>
        <% if phase_method[:harm].present? %>
          <% phase_method[:harm].each do |harm_obj| %>
            <div class="info-row">害（<%= harm_obj.keys.first.to_s %>）</div>
          <% end %>
        <% end %>
        <% if phase_method[:punishment].present? %>
          <% phase_method[:punishment][:pairs].each do |pair| %>
            <div class="info-row"><%= phase_method_text.get_message("punishment.#{phase_method[:punishment][:key]}") %> - <%= phase_method_text.get_message("branch_pairs.#{pair.join('_and_')}") %></div>
          <% end %>
        <% end %>
        <% if phase_method[:self_punishment].present? %>
          <% phase_method[:self_punishment][:pairs].each do |pair| %>
            <div class="info-row"><%= phase_method_text.get_message("self_punishment.#{phase_method[:self_punishment][:key]}") %> - <%= phase_method_text.get_message("branch_pairs.#{pair.join('_and_')}") %></div>
          <% end %>
        <% end %>
        <% if phase_method[:braking].present? %>
          <% phase_method[:braking].each do |braking_obj| %>
            <div class="info-row">破（<%= braking_obj.keys.first.to_s %>）</div>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>

  <% if phase_method[:has_special] %>
    <div class="compact-section">
      <div class="compact-header special-bg"><i class="fas fa-magic"></i> 位相（特殊）</div>
      <div class="compact-content">
        <% if phase_method[:strong_half_trine].present? %>
          <div class="info-row"><%= phase_method_text.get_message('strong_half_trine') %></div>
        <% end %>
        <% if phase_method[:ricchin].present? %>
          <% phase_method[:ricchin][:pairs].each do |pair| %>
            <div class="info-row">律音 - <%= phase_method_text.get_message("branch_pairs.#{pair.join('_and_')}") %></div>
          <% end %>
        <% end %>
        <% if phase_method[:nacchin].present? %>
          <% phase_method[:nacchin][:pairs].each do |pair| %>
            <div class="info-row">納音 - <%= phase_method_text.get_message("branch_pairs.#{pair.join('_and_')}") %></div>
          <% end %>
        <% end %>
        <% if phase_method[:dual_clash].present? %>
          <% phase_method[:dual_clash][:pairs].each do |pair| %>
            <div class="info-row">天剋地中 - <%= phase_method_text.get_message("branch_pairs.#{pair.join('_and_')}") %></div>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>
</div>
